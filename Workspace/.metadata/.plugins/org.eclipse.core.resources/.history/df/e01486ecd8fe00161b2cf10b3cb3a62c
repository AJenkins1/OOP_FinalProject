package app;

import java.util.ArrayList;

import models.BankAccount;
import models.Day;
import models.Schedule;
import models.User;

public class Logic {
	public static ArrayList<User> users;
	public static User currentUser;

	// Universal
	public static void blockSites() {

	}

	public static void newUser(String name) {
		User newUser = new User(name);
		users.add(newUser);
	}

	// TimeManager
	public static String makePlans(int numericDay, String month, int year, String plans, int beginingHour, int endingHour, int beginingMinute, int endingMinute, boolean blockSites) {
		Schedule newPlans = new Schedule(plans, beginingHour, endingHour, beginingMinute, endingMinute, blockSites);
		Day newDay = new Day(numericDay, month, year);
		ArrayList<Schedule> compare = newDay.getSchedules();
		if(compare.contains(newPlans)) {
			return "You have already made these plans.";
		} else {
			newDay.setSchedules(newPlans);
			if(checkForScheduleOverlap(newDay)) {
				return "You planned over this time already.";
			} else {
			return "Plans added";
			}
		}
	}

	public static boolean checkForScheduleOverlap(Day newDay) {
		if(currentUser.getScheduledDates().contains(newDay)) {
			return true;
		} else {
			return false;
		}
	}

	// Budgeter
	public static int displayBalance(BankAccount account) {
		return account.getBalance();
	}

	public static String addToBalance(int addedAmmount, BankAccount account) {
		if (account.getBalance() < 0 && account.getBalance() + addedAmmount > 0) {
			account.addToBalance(addedAmmount);
			return "You are no longer at a negative balance";
		} else {
			account.addToBalance(addedAmmount);
			return "The ammount has been added to the account";
		}
	}

	public static String removeFromBalance(int ammountRemoved, BankAccount account) {
		account.removeFromBalance(ammountRemoved);
		if (account.getBalance() < 0) {
			return "You have dipped into negative funds";
		} else {
			return "The funds have been removed";
		}
	}
}